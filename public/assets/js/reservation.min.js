const fetchData=a=>new Promise(function(c,d){let b=new XMLHttpRequest;b.onload=function(){b.status>=200&&b.status<300?c(b.responseText):d(b.statusText)},b.onerror=function(){d(b.statusText)},b.open("GET",a),b.send()}),{createApp:a}=Vue;a({data:()=>({loaded:!1,products:[]}),created(){let a="http://localhost/limus/api/products";fetchData(a).then(b=>{if(!(b=JSON.parse(b)).status){console.error("Failed to load api from "+a);return}this.setupData(b.data),this.session(this.products),this.loaded=!0}).catch(a=>console.error(a))},methods:{session(a=null){if(null===a)return JSON.parse(sessionStorage.getItem("StayVacationCheckoutSession"));sessionStorage.setItem("StayVacationCheckoutSession",JSON.stringify(a))},setupData(b){let a=this.session();a&&a.forEach(a=>{let c=b.findIndex(b=>a.id==b.id);c<0?b.push(a):b[c]=a}),this.products=b.map(a=>(a.count=a.count||1,a.reserved=Boolean(a.reserved),a.img=0>a.img.search(/url\(/)?`url('${a.img}')`:a.img,a))},updateProducts(){this.session(this.products)},setCount(a){let c=a.target.getAttribute("data-id"),b=this.products.findIndex(a=>a.id==c);b<0||(this.products[b].count=Number(a.target.value),this.updateProducts())},changeReserved(b){let c=b.target.getAttribute("data-id"),a=this.products.findIndex(a=>a.id==c);a<0||(this.products[a].reserved?(this.products[a].reserved=!1,this.products[a].count=1):this.products[a].reserved=!0,this.updateProducts())}}}).mount("#app")
